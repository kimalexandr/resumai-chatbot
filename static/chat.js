// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —á–∞—Ç–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
const chatBox = document.getElementById("chat-box");
const fileUpload = document.getElementById("file-upload");
const vacancyLink = document.getElementById("vacancy-link");
const resumeText = document.getElementById("resume-text");
const userInput = document.getElementById("user-input");

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
function addMessage(sender, text) {
    console.log(`–î–æ–±–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ: ${sender} - ${text}`);
    const msg = document.createElement("div");
    msg.className = sender === "bot" ? "bot-msg" : "user-msg";
    msg.innerText = text;
    chatBox.appendChild(msg);
    chatBox.scrollTop = chatBox.scrollHeight;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
async function sendMessage(message, type = "chat") {
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ: ${message} (—Ç–∏–ø: ${type})`);
    try {
        const response = await fetch("/api/chat", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ message, type })
        });
        console.log(`–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:`, response);
        const data = await response.json();
        console.log(`–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:`, data);
        
        if (data.success === false) {
            addMessage("bot", `‚ùå –û—à–∏–±–∫–∞: ${data.error}`);
        } else {
            addMessage("bot", data.reply);
        }
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:`, error);
        addMessage("bot", `‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error.message}`);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —Ä–µ–∑—é–º–µ
async function uploadFile() {
    console.log("–§—É–Ω–∫—Ü–∏—è uploadFile –≤—ã–∑–≤–∞–Ω–∞");
    const file = fileUpload.files[0];
    if (!file) {
        alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏");
        return;
    }
    
    addMessage("user", `üìÑ –ó–∞–≥—Ä—É–∂–∞—é —Ñ–∞–π–ª: ${file.name}`);
    
    const formData = new FormData();
    formData.append("file", file);
    
    try {
        const response = await fetch("/api/upload", {
            method: "POST",
            body: formData
        });
        
        const data = await response.json();
        if (data.success) {
            addMessage("bot", data.reply);
        } else {
            addMessage("bot", `‚ùå –û—à–∏–±–∫–∞: ${data.error}`);
        }
    } catch (error) {
        addMessage("bot", `‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`);
    }
}

// –ê–Ω–∞–ª–∏–∑ –≤–∞–∫–∞–Ω—Å–∏–∏ –ø–æ —Å—Å—ã–ª–∫–µ
async function analyzeVacancy() {
    console.log("–§—É–Ω–∫—Ü–∏—è analyzeVacancy –≤—ã–∑–≤–∞–Ω–∞");
    const link = vacancyLink.value.trim();
    if (!link) {
        alert("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é");
        return;
    }
    
    console.log(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞–∫–∞–Ω—Å–∏—é: ${link}`);
    addMessage("user", `üîó –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞–∫–∞–Ω—Å–∏—é: ${link}`);
    await sendMessage(link, "vacancy");
    vacancyLink.value = "";
}

// –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—é–º–µ
async function analyzeText() {
    console.log("–§—É–Ω–∫—Ü–∏—è analyzeText –≤—ã–∑–≤–∞–Ω–∞");
    const text = resumeText.value.trim();
    if (!text) {
        alert("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ");
        return;
    }
    
    console.log(`–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ`);
    addMessage("user", `üí¨ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–∫—Å—Ç —Ä–µ–∑—é–º–µ`);
    await sendMessage(text, "resume");
    resumeText.value = "";
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
async function sendChatMessage() {
    console.log("–§—É–Ω–∫—Ü–∏—è sendChatMessage –≤—ã–∑–≤–∞–Ω–∞");
    const message = userInput.value.trim();
    if (!message) {
        alert("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
        return;
    }
    
    console.log(`–û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç: ${message}`);
    addMessage("user", message);
    await sendMessage(message, "chat");
    userInput.value = "";
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –¥–ª—è —á–∞—Ç–∞
userInput.addEventListener("keypress", function(e) {
    if (e.key === "Enter") {
        sendChatMessage();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—é–º–µ
resumeText.addEventListener("keypress", function(e) {
    if (e.key === "Enter" && e.ctrlKey) {
        analyzeText();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –¥–ª—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é
vacancyLink.addEventListener("keypress", function(e) {
    if (e.key === "Enter") {
        analyzeVacancy();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
fileUpload.addEventListener("change", function(e) {
    const file = e.target.files[0];
    if (file) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        const label = document.querySelector('.file-label span');
        if (label) {
            label.textContent = `–í—ã–±—Ä–∞–Ω: ${file.name}`;
        }
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM –∑–∞–≥—Ä—É–∂–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é chat.js...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if (!chatBox) console.error('chat-box –Ω–µ –Ω–∞–π–¥–µ–Ω');
    if (!fileUpload) console.error('file-upload –Ω–µ –Ω–∞–π–¥–µ–Ω');
    if (!vacancyLink) console.error('vacancy-link –Ω–µ –Ω–∞–π–¥–µ–Ω');
    if (!resumeText) console.error('resume-text –Ω–µ –Ω–∞–π–¥–µ–Ω');
    if (!userInput) console.error('user-input –Ω–µ –Ω–∞–π–¥–µ–Ω');
    
    if (!chatBox || !fileUpload || !vacancyLink || !resumeText || !userInput) {
        console.error('–ù–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        return;
    }
    
    console.log('Chat.js –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
    console.log('–í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã:', {
        chatBox: !!chatBox,
        fileUpload: !!fileUpload,
        vacancyLink: !!vacancyLink,
        resumeText: !!resumeText,
        userInput: !!userInput
    });
});
