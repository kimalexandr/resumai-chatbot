#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ OTP
"""

import sqlite3
import os

def test_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    db_path = "resumai.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        print("=" * 50)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table';")
        tables = cursor.fetchall()
        print(f"üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {[t[0] for t in tables]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute("SELECT * FROM user;")
        users = cursor.fetchall()
        print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):")
        for user in users:
            print(f"  ID: {user[0]}, Email: {user[1]}, OTP: {user[2]}, Expires: {user[3]}, Created: {user[4]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—é–º–µ
        cursor.execute("SELECT * FROM resume;")
        resumes = cursor.fetchall()
        print(f"\nüìÑ –†–µ–∑—é–º–µ ({len(resumes)}):")
        for resume in resumes:
            print(f"  ID: {resume[0]}, User ID: {resume[1]}, Content: {resume[2][:50]}..., Link: {resume[3]}")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–∑—ã: {e}")

if __name__ == "__main__":
    test_database()
